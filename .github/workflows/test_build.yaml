name: Test Build

on:
  workflow_dispatch:
    inputs:
      arch:
        description: 'Architecture to build'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - linux
        - arm
        - arm64
        - armv6
        - windows
        - macos
        - macos_arm

jobs:
    linux:
      name: Linux
      if: inputs.arch == 'linux' || inputs.arch == 'all'
      runs-on: ubuntu-latest
      #container: ubuntu:20.04
      steps:
        - name: Checkout sources
          uses: actions/checkout@v3
  
        - name: Update package list
          run: sudo apt-get update
  
        - name: Install utils
          run: sudo apt-get install curl wget -y
  
        - name: Install stable toolchain
          uses: dtolnay/rust-toolchain@stable
  
        - name: Install Alsa devel
          run: sudo apt-get install libasound2-dev -y
  
        - name: Install PulseAudio
          run: DEBIAN_FRONTEND="noninteractive" sudo apt-get install libpulse0 libpulse-dev -y
  
        - name: Install OpenSSL
          run: sudo apt-get install openssl libssl-dev -y
          
        - name: Build
          run: cargo build --release --features pulse-backend
  
        - name: Compress
          run: tar -zcvf camilladsp.tar.gz -C target/release camilladsp
          
        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            path: camilladsp.tar.gz
            name: camilladsp-linux-amd64.tar.gz
  
    arm:
      name: Pi
      if: inputs.arch == 'arm' || inputs.arch == 'all'
      runs-on: ubuntu-latest
      steps:
        - name: Checkout sources
          uses: actions/checkout@v3
  
        - name: Install stable toolchain
          uses: dtolnay/rust-toolchain@stable
          with:
            targets: armv7-unknown-linux-gnueabihf
  
        - name: Install cross
          run: cargo install cross --git https://github.com/cross-rs/cross
  
        - name: Build image
          run: docker build -t cross/armv7:v1 --file Dockerfile_armv7 ./
  
        - name: Build
          run: cross build --release --target armv7-unknown-linux-gnueabihf
          env:
            RUSTFLAGS: "-C target-feature=+neon"
  
        - name: Compress
          run: tar -zcvf camilladsp.tar.gz -C target/armv7-unknown-linux-gnueabihf/release camilladsp
  
        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            path: camilladsp.tar.gz
            name: camilladsp-linux-armv7.tar.gz
  
    arm64:
      name: Pi64
      if: inputs.arch == 'arm64' || inputs.arch == 'all'
      runs-on: ubuntu-latest
      steps:
        - name: Checkout sources
          uses: actions/checkout@v3
  
        - name: Install stable toolchain
          uses: dtolnay/rust-toolchain@stable
          with:
            targets: aarch64-unknown-linux-gnu
  
        - name: Install cross
          run: cargo install cross --git https://github.com/cross-rs/cross
  
        - name: Build image
          run: docker build -t cross/armv8:v1 --file Dockerfile_armv8 ./
  
        - name: Build
          run: cross build --release --target aarch64-unknown-linux-gnu
  
        - name: Compress
          run: tar -zcvf camilladsp.tar.gz -C target/aarch64-unknown-linux-gnu/release camilladsp
  
        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            path: camilladsp.tar.gz
            name: camilladsp-linux-aarch64.tar.gz
  
    armv6:
      name: Pi-Zero
      if: inputs.arch == 'armv6' || inputs.arch == 'all'
      runs-on: ubuntu-latest
      steps:
        - name: Checkout sources
          uses: actions/checkout@v3
  
        - name: Install stable toolchain
          uses: dtolnay/rust-toolchain@stable
          with:
            targets: arm-unknown-linux-gnueabihf
  
        - name: Install cross
          run: cargo install cross --git https://github.com/cross-rs/cross
  
        - name: Build image
          run: docker build -t cross/armv6:v1 --file Dockerfile_armv6 ./
  
        - name: Build
          run: cross build --release --target arm-unknown-linux-gnueabihf
  
        - name: Compress
          run: tar -zcvf camilladsp.tar.gz -C target/arm-unknown-linux-gnueabihf/release camilladsp
  
        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            path: camilladsp.tar.gz
            name: camilladsp-linux-armv6.tar.gz
  
    windows:
      name: Windows
      if: inputs.arch == 'windows' || inputs.arch == 'all'
      runs-on: windows-latest
      steps:
        - name: Checkout sources
          uses: actions/checkout@v3
  
        - name: Install stable toolchain
          uses: dtolnay/rust-toolchain@stable
  
        - name: Build
          run: cargo build --release
  
        - name: Compress
          run: powershell Compress-Archive target/release/camilladsp.exe camilladsp.zip
  
        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            path: camilladsp.tar.gz
            name: camilladsp-windows-amd64.tar.gz
  
    macos:
      name: macOS
      if: inputs.arch == 'macos' || inputs.arch == 'all'
      runs-on: macos-latest
      steps:
        - name: Checkout sources
          uses: actions/checkout@v3
  
        - name: Install stable toolchain
          uses: dtolnay/rust-toolchain@stable
  
        - name: Build
          run: cargo build --release
  
        - name: Compress
          run: tar -zcvf camilladsp.tar.gz -C target/release camilladsp
  
        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            path: camilladsp.tar.gz
            name: camilladsp-macos-amd64.tar.gz
  
  
    macos_arm:
      name: macOS aarch64
      if: inputs.arch == 'macos_arm' || inputs.arch == 'all'
      runs-on: macos-latest
      steps:
        - name: Checkout sources
          uses: actions/checkout@v3
  
        - name: Install stable toolchain
          uses: dtolnay/rust-toolchain@stable
          with:
            targets: aarch64-apple-darwin
  
        - name: Install cross
          run: cargo install cross --git https://github.com/cross-rs/cross
  
        - name: Build
          run: cross build --release --target aarch64-apple-darwin
          env:
            SDKROOT: /Applications/Xcode_14.2.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk
            MACOSX_DEPLOYMENT_TARGET: 13.1
            DEVELOPER_DIR: /Applications/Xcode_14.2.app
  
        - name: Compress
          run: tar -zcvf camilladsp.tar.gz -C target/aarch64-apple-darwin/release camilladsp
  
        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            path: camilladsp.tar.gz
            name: camilladsp-macos-aarch64.tar.gz